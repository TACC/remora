#!/bin/bash
#
#========================================================================
# HEADER
#========================================================================
#% DESCRIPTION
#% scheduler
#%
#% DO NOT call this script directory. This is called by REMORA
#%
#% This script provides extra functionality to interact with
#% the scheduler used by REMORA
#========================================================================
#- IMPLEMENTATION
#-      version     REMORA 2.0
#-      authors     Carlos Rosales ( carlos@tacc.utexas.edu)
#-                  Antonio Gomez  ( agomez@tacc.utexas.edu)
#-      custodian   Kent Milfeld   (milfeld@tacc.utexas.edu)
#-      license     MIT
#
#========================================================================
#  HISTORY
#       2016/10/26: Add support for local runs (no scheduler)
#       2015/12/08: Initial version
#========================================================================
get_job_id()
{
    REMORA_JOB_ID=-1
    if [[ -n "$SLURM_NODELIST" ]]; then
        REMORA_JOB_ID=$SLURM_JOB_ID
    elif [[ -n "$PE_HOSTFILE" ]]; then
        REMORA_JOB_ID=$JOB_ID
    elif [[ -n "$PBS_NODEFILE" ]]; then
        REMORA_JOB_ID=$PBS_JOBID
    elif [[ -n "$LSB_HOSTS" ]]; then
        REMORA_JOB_ID=$LSB_JOBID
    fi
}

get_node_list()
{
    # Check the scheduler system used and define host list
    if [[ -n "$SLURM_NODELIST" ]]; then
        REMORA_SCHEDULER=slurm
        REMORA_JOB_ID=$SLURM_JOB_ID
        NODES=`scontrol show hostname $SLURM_NODELIST`
    elif [[ -n "$PE_HOSTFILE" ]]; then
        REMORA_SCHEDULER=sge
        REMORA_JOB_ID=$JOB_ID
        NODES=`cat $PE_HOSTFILE | awk '{print $1}' | uniq`
    elif [[ -n "$PBS_NODEFILE" ]]; then
        REMORA_SCHEDULER=pbs
        REMORA_JOB_ID=$PBS_JOBID
        NODES=`cat $PBS_NODEFILE | sort | uniq`
    elif [[ -n "$LSB_HOSTS" ]]; then
        REMORA_SCHEDULER=lava
        REMORA_JOB_ID=$LSB_JOBID
        NODES=`cat $LSB_HOSTS | sort | uniq`
    else
        REMORA_SCHEDULER=none
        REMORA_JOB_ID=`date +%s`
        NODES=`hostname -a`
        # Checking the output and return value (Macs don't work well with -a)
        if [[ -z "${NODES// }" ]] || [[ "$?" == "1" ]]; then
            NODES=`hostname`
            # If nothing, at least try localhost
            if [[ -z "${NODES// }" ]]; then
                NODES="localhost"
            fi
        fi
    fi
}

write_node_list()
{
    echo "export REMORA_SCHEDULER=$REMORA_SCHEDULER" >> $REMORA_OUTDIR/remora_env.txt
    echo "export REMORA_JOB_ID=$REMORA_JOB_ID"       >> $REMORA_OUTDIR/remora_env.txt
    for node in $NODES; do
      echo $node >> $REMORA_OUTDIR/remora_nodes.txt
    done
}


# Need to check that the hostlist is not empty
check_hostlist_empty()
{
    node_cnt=0; for i in $NODES; do node_cnt=$(( node_cnt + 1 )); done
    if [[ "$node_cnt" == "0"  ]];then
        print_error "Host list is empty"
        exit 1
    fi
}
