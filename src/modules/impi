#!/bin/bash
#
#========================================================================
# HEADER
#========================================================================
#% DESCRIPTION
#% mpi
#%
#% DO NOT call this script directly. This is called by REMORA
#%
#========================================================================
#- IMPLEMENTATION
#-      version     REMORA 1.8.6
#-      authors     Carlos Rosales ( carlos@tacc.utexas.edu)
#-                  Antonio Gomez  ( agomez@tacc.utexas.edu)
#-      custodian   Kent Milfeld   (milfeld@tacc.utexas.edu)
#-      license     MIT
#========================================================================

# All the functions take three arguments:
#  1.- The name of the node where this function is running
#  2.- The full path where the output will be stored/read
#  3.- The full path to an optional temporary storage location

init_module_impi()
{
  REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3

  REMORA_MASTER=`head -n 1 $REMORA_OUTDIR/remora_nodes.txt`
  if [[ "$REMORA_NODE" == "$REMORA_MASTER" ]]; then
      echo "export I_MPI_STATS=ipm" >> $REMORA_OUTDIR/remora_env.txt
      echo "export I_MPI_STATS_FILE=impi_data.txt" >> $REMORA_OUTDIR/remora_env.txt
  fi
}

collect_data_impi()
{
  :
}

# This function might perform some processing on the data.
# If nothing needs to be done, it can be empty (but declared)
process_data_impi()
{
  :
}

monitor_data_impi()
{
  :
}

plot_data_impi()
{
    REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3
    if [[ -z ${REMORA_PLOT_RESULTS+x} ]] || [[ "$REMORA_PLOT_RESULTS" -eq "0" ]] ; then
        return
    fi  

    REMORA_MASTER=`head -n 1 $REMORA_OUTDIR/remora_nodes.txt`
    if [[ "$REMORA_NODE" == "$REMORA_MASTER" ]]; then

        # Get overall data for pie chart from generated file
        mpiTime=$(grep "MPI Execution Time" $REMORA_OUTDIR/impi_info.txt | awk '{print $5}')
        totTime=$(grep "Total Execution Time" $REMORA_OUTDIR/impi_info.txt | awk '{print $5}')
        serTime=$( echo "scale=2; $totTime - $mpiTime" | bc )

        # Generate the pie plot for the fraction of time spent in MPI calls
        printf "%s \n" "<html>" > $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "<head>" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "<script type=\"text/javascript\">" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "google.charts.load('current', {'packages':['corechart']});" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "google.charts.setOnLoadCallback(drawChart);" >> $REMORA_TMPDIR/impi_fraction.html

        printf "%s \n" "function drawChart() {" >> $REMORA_TMPDIR/impi_fraction.html

        printf "%s \n" "var data = google.visualization.arrayToDataTable([" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "['Task', 'Time in Seconds']," >> $REMORA_TMPDIR/impi_fraction.html
        printf "['Execution Work',     $serTime ], \n" >> $REMORA_TMPDIR/impi_fraction.html
        printf "['MPI Work',      $mpiTime ] \n" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "]);" >> $REMORA_TMPDIR/impi_fraction.html

        printf "%s \n" "var options = {" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "title: 'MPI Communication Cost'" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "};" >> $REMORA_TMPDIR/impi_fraction.html

        printf "%s \n" "var chart = new google.visualization.PieChart(document.getElementById('piechart'));" >> $REMORA_TMPDIR/impi_fraction.html

        printf "%s \n" "chart.draw(data, options);" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "}" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "</script>" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "</head>" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "<body>" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "<div id=\"piechart\" style=\"width: 900px; height: 500px;\"></div>" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "</body>" >> $REMORA_TMPDIR/impi_fraction.html
        printf "%s \n" "</html>" >> $REMORA_TMPDIR/impi_fraction.html

       calls=()
       percents=()

       firstline=$(grep -n "\[time\]" $REMORA_OUTDIR/impi_data.txt | awk -F ':' '{print $1}')
       firstline=$((firstline+1))

       # Generate the bar chart for the top 20 MPI calls greater than 1%
       cnt=0; continue=yes
       while [[ $cnt -lt 20 ]] && [[ $continue == yes ]]; do
            calls[$cnt]=$( head -n $((firstline+$cnt)) $REMORA_OUTDIR/impi_data.txt | tail -n 1 | awk '{print $2}')
         percents[$cnt]=$( head -n $((firstline+$cnt)) $REMORA_OUTDIR/impi_data.txt | tail -n 1 | awk '{print $5}')
         percent=${percents[$cnt]}
         [[ ${percent%%.*} -lt 1 ]] && continue=no
         cnt=$((cnt+1))
       done

        printf "%s \n" "<html>"  > $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "<head>" >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>" >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "<script type=\"text/javascript\">"                    >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "google.charts.load('current', {'packages':['bar']});" >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "google.charts.setOnLoadCallback(drawChart);"          >> $REMORA_TMPDIR/impi_breakdown.html

        printf "%s \n" "function drawChart() {"                               >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "var data = google.visualization.arrayToDataTable(["   >> $REMORA_TMPDIR/impi_breakdown.html
        printf "['MPI Call', 'Fraction of MPI Time (%%)'],\n"                 >> $REMORA_TMPDIR/impi_breakdown.html

        comma=","
        for i in `seq 0 $((cnt-1))`; do
          [[ $i == $((cnt-1)) ]] && comma=""
          printf "['${calls[$i]}', ${percents[$i]}]${comma}\n" >> $REMORA_TMPDIR/impi_breakdown.html
        done
        printf "%s \n" "]);" >> $REMORA_TMPDIR/impi_breakdown.html

        printf "%s \n" "var options = {"         >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "chart: {"                >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "title: 'Top MPI Calls'," >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "subtitle: 'Fraction of Total MPI Time (%)'," >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "},"                      >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "bars: 'horizontal' // Required for Material Bar Charts." >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "};"                      >> $REMORA_TMPDIR/impi_breakdown.html

        printf "%s \n" "var chart = new google.charts.Bar(document.getElementById('barchart_material'));" >> $REMORA_TMPDIR/impi_breakdown.html

        printf "%s \n" "chart.draw(data, options);" >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "}"                          >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "</script>"                  >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "</head>"                    >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "<body>"                     >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "<div id=\"barchart_material\" style=\"width: 900px; height: 500px;\"></div>" >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "</body>"                    >> $REMORA_TMPDIR/impi_breakdown.html
        printf "%s \n" "</html>"                    >> $REMORA_TMPDIR/impi_breakdown.html
    fi
}

finalize_module_impi()
{
  REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3
  source $REMORA_OUTDIR/remora_env.txt
  REMORA_MASTER=`head -n 1 $REMORA_OUTDIR/remora_nodes.txt`
  if [[ "$REMORA_NODE" == "$REMORA_MASTER" ]]; then
	if [[ "$REMORA_MODE" == "FULL" ]] || [[ "$REMORA_MODE" == "MONITOR" ]]; then
        cd $REMORA_OUTDIR/..
        outfile=impi_data.txt
        # Check for mpiP output in case code was not MPI based
        fileNum=$( ls -ltr $outfile )
        if [[ -n "$fileNum" ]]; then
            mpiNum=$( grep "mpi_tasks" $outfile | awk '{print $7}' )
            nodeNum=$( grep "mpi_tasks" $outfile | awk '{print $9}' )
           #usrTime=$( grep "# user" $outfile | awk '{print $6}' )
           #sysTime=$(grep "# system" $outfile | awk '{print $6}' )
           #mpiTime=$(grep "# mpi" $outfile | awk '{print $6}' )
           #totTime=$( echo "scale=2;  $usrTime + $sysTime + $mpiTime " | bc ) 
           #mpiFrac=$( echo "scale=2; 100.0 * $mpiTime / $totTime" | bc ) 
            totTime=$( grep "# wallclock" $outfile | awk '{print $4}' )
            mpiTime=$( grep "# mpi" $outfile | awk '{print $4}' )
            mpiFrac=$( echo "scale=2; 100.0 * $mpiTime / $totTime" | bc )
            echo "Number of Nodes      : $nodeNum"     >  $REMORA_OUTDIR/impi_info.txt
            echo "Number of MPI Tasks  : $mpiNum"      >> $REMORA_OUTDIR/impi_info.txt
            echo "Total Execution Time : $totTime (s)" >> $REMORA_OUTDIR/impi_info.txt
            echo "MPI Execution Time   : $mpiTime (s)" >> $REMORA_OUTDIR/impi_info.txt
            echo "MPI Fraction of Time : $mpiFrac (%)" >> $REMORA_OUTDIR/impi_info.txt
            mv $outfile $REMORA_OUTDIR
	  fi
    fi
    plot_data_impi $REMORA_NODE $REMORA_OUTDIR $REMORA_TMPDIR
  fi
}
