#!/bin/bash
#
#========================================================================
# HEADER
#========================================================================
#% DESCRIPTION
#% Nvidia Temperature
#%
#% DO NOT call this script directly. This is called by REMORA
#%
#========================================================================
#- IMPLEMENTATION
#-      version     REMORA 2.0
#-      authors     Carlos Rosales ( carlos@tacc.utexas.edu)
#-                  Antonio Gomez  ( agomez@tacc.utexas.edu)
#-                  Kent Milfeld   (milfeld@tacc.utexas.edu)
#-      license     MIT
#========================================================================

# All the functions take three arguments:
#  1.- The name of the node where this function is running
#  2.- The full path where the output will be stored/read
#  3.- The full path to an optional temporary storage location

# Good source of info: https://developers.google.com/chart/interactive/docs
# Rewritten for Multiple CPUs in a node  2020-11-25 Kent Milfeld
# Code easier to test (comment 1st 5 line, return->exit, set TMPDIR,NODE & PLOT_RESULTS

init_module_nv_temperature()
{
    :
}

collect_data_nv_temperature()
{
    :
}

process_data_nv_temperature()
{
    :
}

plot_data_nv_temperature()
{
    REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3

    local timestamp idx row
    local node
    local n_columns n_zones
    local isGraceGrace isGraceHopper

    if [[ -z ${REMORA_PLOT_RESULTS} ]] || [[ "$REMORA_PLOT_RESULTS" -eq "0" ]] ; then
        return
    fi

    node=$REMORA_NODE

    if [[ ! -f $REMORA_TMPDIR/nv_temperature_cpu_${REMORA_NODE}.txt ]]; then
        return
    fi

    FILE=$REMORA_TMPDIR/nv_temperature_${node}.html

    TEMP_TXT_FILE=${REMORA_TMPDIR}/nv_temperature_${REMORA_NODE}.txt 

    n_columns=`head -n1 ${TEMP_TXT_FILE} | wc -w`
    n_zones=$(( n_columns - 1 ))

    t0=`head -n1 ${TEMP_TXT_FILE} | awk '{print $1}'`

    isGraceGrace=0
    isGraceHopper=0

    if [[ "$n_zones" == "26" ]]; then
        isGraceGrace=1
    elif [[ "$n_zones" == "12" ]]; then
        isGraceHopper=1
    else
        echo " -> File $TEMP_TXT_FILE: incorrect format"
        return
    fi

    printf "%s \n" "<html>" > $FILE
    printf "%s \n" "<head>" >> $FILE
    printf "%s \n" "<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>" >> $FILE
    printf "%s \n" "<script type=\"text/javascript\">" >> $FILE
    printf "%s \n" "google.charts.load('current', {'packages':['corechart']});" >> $FILE

    printf "%s \n" "google.charts.setOnLoadCallback(drawTemp);" >> $FILE
    printf "%s \n" "function drawTemp() {" >> $FILE
    printf "%s \n" "var data = new google.visualization.DataTable();" >> $FILE
    printf "%s \n" "data.addColumn('number', 'Execution Time (sec)');" >> $FILE

    if [[ "$isGraceGrace" == "1" ]]; then
        for i in {1..26}; do
            printf "%s %s %s \n" "data.addColumn('number', '" $i "');" >> $FILE
        done
    fi

    if [[ "$isGraceHopper" == "1" ]]; then
        for i in {1..12}; do
            printf "%s %s %s \n" "data.addColumn('number', '" $i "');" >> $FILE
        done
    fi

    printf "%s\n" "data.addRows([" >> $FILE

    while read line; do

        t=`echo $line | awk '{print $1;}'`
        timestamp=$(echo "scale=2; $t - $t0" | bc)

        idx=0
        row=$timestamp
        for i in $line; do
            [[ $idx -gt 0 ]] && row=$row","$i
            idx=$[idx + 1]
        done
        printf "%s%s%s \n" "[" $row "]," >> $FILE

    done < $TEMP_TXT_FILE
    printf "%s \n" "]);" >> $FILE

    printf "%s \n" "var options = { " >> $FILE

    if [[ "$isGraceGrace" == "1" ]]; then
        printf "%s \n" "title: 'Temperature (Grace-Grace thermal zones)'," >> $FILE
    fi

    if [[ "$isGraceHopper" == "1" ]]; then
        printf "%s \n" "title: 'Temperature (Grace-Hopper thermal zones)'," >> $FILE
    fi
    printf "%s \n" "titleTextStyle: {color: 'black', fontSize: '20'}," >> $FILE
    printf "%s \n" "fontSize: 18," >> $FILE
    printf "%s \n" "vAxis: {title: 'Degrees (milli-Celcius)'}," >> $FILE
    printf "%s \n" "hAxis: {title: 'Time (s)'}," >> $FILE
    printf "%s \n" "legend: { position: 'right'}," >> $FILE
    printf "%s \n" "width:  1024," >> $FILE
    printf "%s \n" "height:  800" >> $FILE
    printf "%s \n" "};" >> $FILE

    printf "%s \n" "var chart = new google.visualization.LineChart(document.getElementById('line_temp')); " >> $FILE 
    printf "%s \n" "chart.draw(data, options); " >> $FILE 
    printf "%s \n" "} " >> $FILE 

    printf "%s \n" "</script> " >> $FILE 
    printf "%s \n" "</head> " >> $FILE 
    printf "%s \n" "<body> " >> $FILE 
    printf "%s \n" "<table class='columns'>" >> $FILE 
    printf "%s \n" "<tr>" >> $FILE 
    printf "%s \n" "  <div id=\"line_temp\"></div> " >> $FILE 
    printf "%s \n" "</tr>" >> $FILE 
    printf "%s \n" "</body> " >> $FILE 
    printf "%s \n" "</html> " >> $FILE 
}

monitor_data_nv_temperature()
{
    :
}

finalize_module_nv_temperature()
{
    REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3

    plot_data_nv_temperature $REMORA_NODE $REMORA_OUTDIR $REMORA_TMPDIR
}
