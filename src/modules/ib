#!/bin/sh
#
#========================================================================
# HEADER
#========================================================================
#% DESCRIPTION
#% ib
#%
#% DO NOT call this script directly. This is called by REMORA
#%
#========================================================================
#- IMPLEMENTATION
#-      version     REMORA 1.6
#-      authors     Carlos Rosales (carlos@tacc.utexas.edu)
#-                  Antonio Gomez  (agomez@tacc.utexas.edu)
#-      license     MIT
#========================================================================

# All the functions take three arguments:
#  1.- The name of the node where this function is running
#  2.- The full path where the output will be stored/read
#  3.- The full path to an optional temporary storage location

init_module_ib()
{
    if [ "$REMORA_SYMMETRIC" == "0" ]; then
        if [ "$REMORA_MODE" == "FULL" ] || [ "$REMORA_MODE" == "MONITOR" ]; then
            cntr_64b="/sys/class/infiniband/mlx4_0/ports/1/counters_ext/"
            cntr_32b="/sys/class/infiniband/mlx4_0/ports/1/counters/"
            if [ -d $cntr_64b ]; then
                ib_xmit_pack_cntr="${cntr_64b}port_xmit_packets_64"
                ib_rcv_pack_cntr="${cntr_64b}port_rcv_packets_64"
                ib_xmit_byte_cntr="${cntr_64b}port_xmit_data_64"
                ib_rcv_byte_cntr="${cntr_64b}port_rcv_data_64"
            else
                ib_xmit_pack_cntr="${cntr_32b}port_xmit_packets"
                ib_rcv_pack_cntr="${cntr_32b}port_rcv_packets"
                ib_xmit_byte_cntr="${cntr_32b}port_xmit_data"
                ib_rcv_byte_cntr="${cntr_32b}port_rcv_data"
            fi
            ib_xmit_packs=`cat $ib_xmit_pack_cntr`
            ib_rcv_packs=`cat $ib_rcv_pack_cntr`
            ib_xmit_bytes=`cat $ib_xmit_byte_cntr`
            ib_rcv_bytes=`cat $ib_rcv_byte_cntr`
        fi
    fi
}

collect_data_ib()
{
    REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3
    if [ "$REMORA_SYMMETRIC" == "0" ]; then
        if [ "$REMORA_MODE" == "FULL" ] || [ "$REMORA_MODE" == "MONITOR" ]; then
            local TIMESTAMP=`date +%s`
            local new_ib_xmit_packs=`cat $ib_xmit_pack_cntr`
            local new_ib_rcv_packs=`cat $ib_rcv_pack_cntr`
            local new_ib_xmit_bytes=`cat $ib_xmit_byte_cntr`
            local new_ib_rcv_bytes=`cat $ib_rcv_byte_cntr`
            printf "%d %10d %10d %10d %10d\n" $TIMESTAMP \
                $((new_ib_xmit_packs-ib_xmit_packs)) \
                $((new_ib_rcv_packs-ib_rcv_packs)) \
                $((new_ib_xmit_bytes-ib_xmit_bytes)) \
                $((new_ib_rcv_bytes-ib_rcv_bytes)) \
                >> $REMORA_TMPDIR/ib_packets-${REMORA_NODE}.txt
            ib_xmit_packs=$new_ib_xmit_packs
            ib_rcv_packs=$new_ib_rcv_packs
            ib_xmit_bytes=$new_ib_xmit_bytes
            ib_rcv_bytes=$new_ib_rcv_bytes
        fi
    fi
}

process_data_ib()
{
  :
}

monitor_data_ib()
{
  :
}

finalize_module_ib()
{
  :
}
